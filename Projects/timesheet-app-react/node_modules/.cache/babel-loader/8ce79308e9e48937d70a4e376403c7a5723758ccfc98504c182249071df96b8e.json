{"ast":null,"code":"var _jsxFileName = \"/Users/anusharesu/Desktop/Nani_Bitbucket/Go/Projects/timesheet-app-react/src/components/Projects.js\",\n  _s = $RefreshSig$();\n// src/components/Projects.js\n\nimport React, { useState, useEffect } from 'react';\nimport api from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Projects = () => {\n  _s();\n  const [projects, setProjects] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    fetchProjects();\n  }, []);\n  const fetchProjects = async () => {\n    setIsLoading(true);\n    try {\n      const response = await api.get('/projects');\n      setProjects(response.data);\n      setIsLoading(false);\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Failed to fetch projects. Please try again later.');\n      setIsLoading(false);\n      console.error('Error fetching projects:', err);\n\n      // Handle unauthorized access\n      if (err.response && err.response.status === 401) {\n        // Redirect to login page or show login modal\n        console.log('User is not authenticated. Redirecting to login...');\n        // Implement your redirect logic here, e.g.:\n        // history.push('/login');\n      }\n    }\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading projects...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Projects\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), projects.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No projects available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: projects.map(project => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [project.project_id, \" - \", project.project_name]\n      }, project.project_id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(Projects, \"4ylmyb5w5QWIKD6IgsywzSonGZI=\");\n_c = Projects;\nexport default Projects;\nvar _c;\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"names":["React","useState","useEffect","api","jsxDEV","_jsxDEV","Projects","_s","projects","setProjects","isLoading","setIsLoading","error","setError","fetchProjects","response","get","data","err","_err$response","_err$response$data","message","console","status","log","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","project","project_id","project_name","_c","$RefreshReg$"],"sources":["/Users/anusharesu/Desktop/Nani_Bitbucket/Go/Projects/timesheet-app-react/src/components/Projects.js"],"sourcesContent":["// src/components/Projects.js\n\nimport React, { useState, useEffect } from 'react';\nimport api from '../services/api';\n\nconst Projects = () => {\n  const [projects, setProjects] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    fetchProjects();\n  }, []);\n\n  const fetchProjects = async () => {\n    setIsLoading(true);\n    try {\n      const response = await api.get('/projects');\n      setProjects(response.data);\n      setIsLoading(false);\n    } catch (err) {\n      setError(err.response?.data?.message || 'Failed to fetch projects. Please try again later.');\n      setIsLoading(false);\n      console.error('Error fetching projects:', err);\n      \n      // Handle unauthorized access\n      if (err.response && err.response.status === 401) {\n        // Redirect to login page or show login modal\n        console.log('User is not authenticated. Redirecting to login...');\n        // Implement your redirect logic here, e.g.:\n        // history.push('/login');\n      }\n    }\n  };\n\n  if (isLoading) {\n    return <div>Loading projects...</div>;\n  }\n\n  if (error) {\n    return <div>{error}</div>;\n  }\n\n  return (\n    <div>\n      <h2>Projects</h2>\n      {projects.length === 0 ? (\n        <p>No projects available.</p>\n      ) : (\n        <ul>\n          {projects.map((project) => (\n            <li key={project.project_id}>\n              {project.project_id} - {project.project_name}\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default Projects;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}